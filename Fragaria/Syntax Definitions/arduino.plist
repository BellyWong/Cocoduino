<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beginCommand</key>
	<string></string>
	<key>endCommand</key>
	<string></string>
	<key>beginInstruction</key>
	<string></string>
	<key>endInstruction</key>
	<string></string>
	<key>beginVariable</key>
	<string></string>
	<key>endVariable</key>
	<string></string>
	<key>firstString</key>
	<string>&quot;</string>
	<key>secondString</key>
	<string>&apos;</string>
	<key>firstSingleLineComment</key>
	<string>//</string>
	<key>secondSingleLineComment</key>
	<string></string>
	<key>beginFirstMultiLineComment</key>
	<string>/*</string>
	<key>endFirstMultiLineComment</key>
	<string>*/</string>
	<key>beginSecondMultiLineComment</key>
	<string></string>
	<key>endSecondMultiLineComment</key>
	<string></string>
	<key>functionDefinition</key>
	<string>^\s*.*\(.*\)\n?\s*\{</string>
	<key>removeFromFunction</key>
	<string></string>
	<key>keywordsCaseSensitive</key>
	<true/>
	<key>recolourKeywordIfAlreadyColoured</key>
	<true/>
	<key>keywords</key>
	<array>
		<string>and</string>
		<string>HIGH</string>
		<string>LOW</string>
		<string>INPUT</string>
		<string>OUTPUT</string>
		<string>and_eq</string>
		<string>asm</string>
		<string>auto</string>
		<string>bitand</string>
		<string>bitor</string>
		<string>byte</string>
		<string>bool</string>
		<string>break</string>
		<string>case</string>
		<string>catch</string>
		<string>char</string>
		<string>class</string>
		<string>compl</string>
		<string>const</string>
		<string>const_cast</string>
		<string>continue</string>
		<string>default</string>
		<string>delete</string>
		<string>do</string>
		<string>double</string>
		<string>dynamic_cast</string>
		<string>else</string>
		<string>enum</string>
		<string>explicit</string>
		<string>export</string>
		<string>extern</string>
		<string>false</string>
		<string>float</string>
		<string>for</string>
		<string>friend</string>
		<string>goto</string>
		<string>if</string>
		<string>inline</string>
		<string>int</string>
		<string>long</string>
		<string>mutable</string>
		<string>namespace</string>
		<string>new</string>
		<string>not</string>
		<string>not_eq</string>
		<string>operator</string>
		<string>or</string>
		<string>or_eq</string>
		<string>private</string>
		<string>protected</string>
		<string>public</string>
		<string>register</string>
		<string>reinterpret_cast</string>
		<string>return</string>
		<string>short</string>
		<string>signed</string>
		<string>sizeof</string>
		<string>static</string>
		<string>static_cast</string>
		<string>struct</string>
		<string>switch</string>
		<string>template</string>
		<string>this</string>
		<string>throw</string>
		<string>true</string>
		<string>try</string>
		<string>typedef</string>
		<string>typeid</string>
		<string>typename</string>
		<string>union</string>
		<string>unsigned</string>
		<string>using</string>
		<string>virtual</string>
		<string>void</string>
		<string>volatile</string>
		<string>wchar_t</string>
		<string>while</string>
		<string>xor</string>
		<string>xor_eq</string>
		<string>NULL</string>
		<string>#define</string>
		<string>#ifdef</string>
		<string>#ifndef</string>
		<string>#endif</string>
		<string>#else</string>
		<string>#include</string>
		<string>Serial</string>
		<string>Stream</string>
	</array>
	<key>autocompleteWords</key>
	<array>
		<string>char(</string>
		<string>byte(</string>
		<string>int(</string>
		<string>word(</string>
		<string>long(</string>
		<string>float(</string>
		<string>#define</string>
		<string>#incude</string>
		<string>Serial</string>
		<string>Stream</string>
		<string>LOW</string>
		<string>HIGH</string>
		<string>INPUT</string>
		<string>OUTPUT</string>
		<string>sizeof(</string>
		<string>pinMode(</string>
		<string>digitalWrite(</string>
		<string>digitalRead(</string>
		<string>analogReference(</string>
		<string>analogRead(</string>
		<string>analogWrite(</string>
		<string>tone(</string>
		<string>noTone(</string>
		<string>shiftOut(</string>
		<string>shiftIn(</string>
		<string>pulseIn(</string>
		<string>millis()</string>
		<string>micros()</string>
		<string>delayMicroseconds(</string>
		<string>delay(</string>
		<string>min(</string>
		<string>max(</string>
		<string>abs(</string>
		<string>constrain(</string>
		<string>map(</string>
		<string>pow(</string>
		<string>sqrt(</string>
		<string>sin(</string>
		<string>cos(</string>
		<string>tan(</string>
		<string>randomSeed(</string>
		<string>random(</string>
		<string>lowByte(</string>
		<string>highByte(</string>
		<string>bitRead(</string>
		<string>bitWrite(</string>
		<string>bitSet(</string>
		<string>bitClear(</string>
		<string>bit(</string>
		<string>attachInterupt(</string>
		<string>detachInterrupt(</string>
		<string>interrupts()</string>
		<string>noInterrupts()</string>
		<string>begin(</string>
		<string>end()</string>
		<string>available()</string>
		<string>read()</string>
		<string>peek()</string>
		<string>flush()</string>
		<string>print(</string>
		<string>println(</string>
		<string>write(</string>
		<string>find(</string>
		<string>findUntil(</string>
		<string>readBytes(</string>
		<string>readBytesUntil(</string>
		<string>parseInt(</string>
		<string>parsefloat(</string>
		<string>setTimeout(</string>
	</array>
</dict>
</plist>
